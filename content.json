{"pages":[{"title":"categories","date":"2018-09-13T01:52:21.000Z","path":"categories/index.html","text":""},{"title":"项目信息","date":"2018-09-13T06:00:52.000Z","path":"project/index.html","text":"「请输入密码！！！」 Incorrect Password! No content to display! "},{"title":"tags","date":"2018-09-13T01:52:26.000Z","path":"tags/index.html","text":""}],"posts":[{"title":"结果集遍历Code值","date":"2018-09-17T03:46:51.000Z","path":"2018/09/17/leapcodevalue/","text":"首先获取所有的代码值 1leapcodevalue[] sexvalues = CodeTypeCache.getInstance().getCodeValues(\"ltpujnjs_sex\"); 遍历结果集 12345678 for (EntityBean data : datas)&#123; String sex = data.getString(\"sex\"); if (StringUtils.isNoneEmpty(sex)) &#123; data.set(\"cnsex\", LTPUjnjs_getCodevalue(sexvalues, sex)); &#125; &#125; 将结果集中的值带入遍历123456789101112131415161718/** * values 所有的代码值 * code 结果集中的值 */private String LTPUjnjs_getCodevalue(leapcodevalue[] values, String code) &#123; if (values != null &amp;&amp; StringUtils.isNoneEmpty(code)) &#123; for (leapcodevalue value : values) &#123; if (code.equals(value.getcodeid())) &#123; return value.getcodevalue(); &#125; &#125; &#125; return \"\"; &#125;","tags":[{"name":"codevalue","slug":"codevalue","permalink":"https://jtsy.github.io/blog/tags/codevalue/"}],"categories":[{"name":"LEAP","slug":"LEAP","permalink":"https://jtsy.github.io/blog/categories/LEAP/"},{"name":"服务端","slug":"LEAP/服务端","permalink":"https://jtsy.github.io/blog/categories/LEAP/服务端/"}]},{"title":"获取数组的key & values","date":"2018-09-13T07:47:26.000Z","path":"2018/09/13/get-object-value/","text":"123456789101112131415161718192021222324252627/** * 获取数组的key * @param object * @returns */function getObjectKeys(object) &#123; var keys = []; for (var property in object)keys.push(property); return keys;&#125;/** * 获取数组的values * @param object * @returns */function getObjectValues(object)&#123; var values = []; for (var property in object)values.push(object[property]); return values;&#125;","tags":[{"name":"数组","slug":"数组","permalink":"https://jtsy.github.io/blog/tags/数组/"},{"name":"values","slug":"values","permalink":"https://jtsy.github.io/blog/tags/values/"}],"categories":[{"name":"LEAP","slug":"LEAP","permalink":"https://jtsy.github.io/blog/categories/LEAP/"},{"name":"客户端","slug":"LEAP/客户端","permalink":"https://jtsy.github.io/blog/categories/LEAP/客户端/"}]},{"title":"Js直接获取返回值的数组","date":"2018-09-13T07:32:23.000Z","path":"2018/09/13/leap-converesult/","text":"this.request获取EntityBeanSet的返回值 LEAP.ConvertResult(res) 可以直接获取返回的数组 LEAP.ConvertResult 源码 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081828384858687888990919293949596979899100101102103104105106107108109110111112113114115116117/** * 转换ResultSet为object[] * * @param &#123;ResultSet&#125; * object * @return &#123;object[]&#125; */LEAP.convertResult = function(object)&#123; if (object != null &amp;&amp; object.javaClass != null) &#123; if (object.javaClass == commfields.rsc) &#123; if (object == null || object.result == null || object.result.length == 0) return null; var _objs = new Array(); var l = object.result.length; var hascvs = object.codeValues != null; for(var i = 0;i &lt; l;i++) &#123; var _obj = new Object(); var cells = object.result[i]; if (!cells) continue; var ll = object.metaData.length; for(var j = 0;j &lt; ll;j++) &#123; var _md = object.metaData[j].name; var _type = object.metaData[j].type; var _value = cells[j]; if (hascvs) &#123; var _tt = object.codeValues[i]; if (_tt != null) &#123; _cv = _tt[j] if (_cv != null) &#123; _obj[commfields.rsccv + _md] = _cv; &#125; &#125; &#125; //|| _type == 2 || _type == 3 if (_type == -5 || _type == -6 || _type == -7 || _type == 4 || _type == 5 || _type == 6 || _type == 7 || _type == 8) &#123; if (String.isEmpty(_value)) _value = null; else _value = LEAP.tonum(_value); &#125; _obj[_md] = _value; &#125; _objs.add(_obj); &#125; return _objs; &#125; else if (object.javaClass == 'com.longrise.LEAP.Base.Objects.EntitySet') &#123; return object.result; &#125; else if (object.javaClass == 'com.longrise.LEAP.Base.Objects.EntityBeanSet') &#123; if (object == null || object.result == null || object.result.length == 0) return null; var _objs = new Array(); var l = object.result.length; var hascvs = object.codeValues != null; if (hascvs) &#123; for(var i = 0;i &lt; l;i++) &#123; var _obj = object.result[i]; var cells = object.result[i]; if (!cells) continue; var ll = object.metaData.length; for(var j = 0;j &lt; ll;j++) &#123; var _md = object.metaData[j].name; var _type = object.metaData[j].type; var _value = cells[_md]; if (hascvs) &#123; var _tt = object.codeValues[i]; if (_tt != null) &#123; _cv = _tt[j] if (_cv != null) &#123; _obj[commfields.rsccv + _md] = _cv; &#125; &#125; &#125; if (_type == -5 || _type == -6 || _type == -7 || _type == 4 || _type == 5 || _type == 6 || _type == 7 || _type == 8) &#123; if (String.isEmpty(_value)) _value = null; else _value = LEAP.tonum(_value); &#125; _obj[_md] = _value; &#125; _objs.add(_obj); &#125; return _objs; &#125; else return object.result; &#125; &#125; if (object != null &amp;&amp; object.result != null) return object.result; return object;&#125;","tags":[{"name":"LEAP","slug":"LEAP","permalink":"https://jtsy.github.io/blog/tags/LEAP/"},{"name":"ConvertResult","slug":"ConvertResult","permalink":"https://jtsy.github.io/blog/tags/ConvertResult/"}],"categories":[{"name":"LEAP","slug":"LEAP","permalink":"https://jtsy.github.io/blog/categories/LEAP/"},{"name":"客户端","slug":"LEAP/客户端","permalink":"https://jtsy.github.io/blog/categories/LEAP/客户端/"}]},{"title":"Eclipse | Formatter & CodeTemplates 格式化和代码注释","date":"2018-09-13T07:26:49.000Z","path":"2018/09/13/eclipse-formatter-codetemplates/","text":"团队里面最好能统一风格，这样在看别人代码的时候就比较清晰。 CodeTemplates 写注释比不写好注释的格式其实也有模板的 没有用注释模板 使用注释模板 /** */ 一般用在Method上面// 单行注册用在代码的上面， 也有人用在代码的后面，但是个人不建议 Formatter 关于代码格式化目前只碰到大括号是否独立一行的情况一下格式化是以大括号独立一行为标准 格式化前 格式化后 格式化后代码阅读起来比较清晰 Eclipse 配置Formatter在Eclipse工具栏选择 Preferences -&gt; Java -&gt; Code Style -&gt; Formatter 选择 Edit... 或者 ‘New…’ Indentation 缩进我个人习惯将Tab policy 选择为 Spaces only，因为可以保证在不同的IDE中代码的兼容性比较好在使用Tab的时候实际上是空了4格 Brace positions 配置大括号 Same line 在同一行 Next line 换行（大括号独立一行） Next line indented 换行并缩进 Next line on wrap 不知道 其他的配置没有研究过，有兴趣可以自己去研究或者参考玩转Eclipse — 自动代码规范化 - CSDN博客 或者直接导入我的Formatter模板 Eclipse 配置CodeTemplate在Eclipse工具栏选择 Preferences -&gt; Java -&gt; Code Style -&gt; Code Templates 在Comments 中 配置各个类型的注释格式 选中类型后选择Edit...开始编辑Insert Variable... 可以选择各种参数 配置好后使用方式是在method上 输入/** + 回车 就会显示配置的注释 也可以下载我的CodeTemplate 模板导入如果使用我的模板请将@author 改成你自己的名字 模板下载地址","tags":[{"name":"Eclipse","slug":"Eclipse","permalink":"https://jtsy.github.io/blog/tags/Eclipse/"},{"name":"Formatter","slug":"Formatter","permalink":"https://jtsy.github.io/blog/tags/Formatter/"},{"name":"CodeTemplates","slug":"CodeTemplates","permalink":"https://jtsy.github.io/blog/tags/CodeTemplates/"}],"categories":[{"name":"工具&配置","slug":"工具-配置","permalink":"https://jtsy.github.io/blog/categories/工具-配置/"}]},{"title":"html中代码表自动更新","date":"2018-09-13T07:22:31.000Z","path":"2018/09/13/dynacode/","text":"添加属性 dynacode=1","tags":[{"name":"代码表","slug":"代码表","permalink":"https://jtsy.github.io/blog/tags/代码表/"}],"categories":[{"name":"LEAP","slug":"LEAP","permalink":"https://jtsy.github.io/blog/categories/LEAP/"},{"name":"客户端","slug":"LEAP/客户端","permalink":"https://jtsy.github.io/blog/categories/LEAP/客户端/"}]},{"title":"在LEAP项目如何使用Swagger调试Restful Api","date":"2018-09-13T05:34:56.000Z","path":"2018/09/13/SwaggerApi/","text":"背景 在前后端分离开发环境中，后端同事开发好接口后，前端同事需要没有一个浏览所有接口的页面LEAP中是通过 /restservices 访问所有发布的接口，界面不是特别友好 具体配置 添加类注解 添加方法注解 样例 创建Swagger匹配类 RestApiConfig META-INF配置 测试 Swagger是基于REST API测试/文档类插件，由于LEAP中可能存在第三方包不兼容的问题（没有针对原Swagger服务包做兼容测试，本着能少引用包就少引用的想法），我将Swagger服务整合在LWEG公共项目中。 具体配置 打包最新LWEG.BLL.jar 在Service类!!! 添加类注解12345@Singleton @Api(name = \"PAD RESTful API\", description = \"技能竞赛PAD端Restservices Api\") // name:分类名称; description:本类的描述信息;public class JNJSPADService extends LEAPContextService&#123;&#125; 添加方法注解 @ApiOperation(value=&quot;方法名&quot;, notes=&quot;描述&quot;) @ApiImplicitParams ApiImplicitParam name参数名称. value 参数中文名称. example 测试数据. 所有曝光的参数都要求只传EntityBean.比如,方法要接收两个参数name 和 age ,那就请将这两个放到EntityBean中 , 然后将EntityBean传给方法,特殊例外,这样写的好处是方便之后扩展.我们还要将方法中必须用到的参数写到注解中,这样方便前端调试.1234@ApiImplicitParams(&#123; @ApiImplicitParam(name = \"Bean里面的参数说明\", value = \"参数名称\", example = \"测试数据\"), @ApiImplicitParam(name = \"Bean里面的参数说明\", value = \"参数名称\", example = \"测试数据\") &#125;) @RequestMapping restservices 地址 1@RequestMapping(value=&#123;\"/JNJSApi/PAD_Template/query\"&#125;) //'restservices 地址' 样例12345678910111213141516171819202122/** * Api 样例 * * @Description: PAD_Template * @param bean * @return * @author Lix. * @date 2018年8月28日 下午5:38:58 * @version V1.0 */@ApiOperation(value = \"API 服务样例\", notes = \"入参统一用EntityBean，出参用JsonResult\") @ApiImplicitParams(&#123; @ApiImplicitParam(name = \"Bean里面的参数说明\", value = \"参数名称\", example = \"测试数据\"), @ApiImplicitParam(name = \"Bean里面的参数说明\", value = \"参数名称\", example = \"测试数据\")&#125;)@RequestMapping(value=&#123;\"/JNJSApi/PAD_Template/query\"&#125;) //'restservices 地址'public JsonResult PAD_Template(EntityBean bean)&#123; JNJSPADLogic logic = SingletonService.getInstance(JNJSPADLogic.class); LogicManager.getInstance().setLogic(this, logic); return logic.PAD_Template(bean);&#125; 创建Swagger匹配类 RestApiConfig description 描述信息 title 标题 termsOfServiceUrl 服务反馈地址或者官网 contact 开发者 version 版本号目前一个包一个类就够了.1234567891011121314151617181920212223242526272829303132333435363738package com.longrise.JNJS.Conf;import java.util.List;import com.longrise.LWEG.UnifyPort.Pojo.ApiInfo;import com.longrise.LWEG.UnifyPort.Pojo.ApiInfoBuilder;import com.longrise.LWEG.UnifyPort.Pojo.Contact;import com.longrise.LWEG.UnifyPort.Pojo.ExternalDocs;import com.longrise.LWEG.UnifyPort.Swagger.DocInit;import com.longrise.LWEG.UnifyPort.Swagger.SwaggerApiConfig;public class RestApiConfig implements SwaggerApiConfig&#123; public DocInit createRestApi(List&lt;String&gt; list) &#123; return new DocInit().apiInfo(apiInfo()).basePackage(list).externalDocs(externalDocs()).build(); &#125; private ApiInfo apiInfo() &#123; return new ApiInfoBuilder().description(\"\" + \"&lt;div class='ex_description'&gt;\" + \" &lt;span&gt;&lt;strong&gt;测试地址&lt;/strong&gt;：http://192.168&lt;/span&gt;\" + \" &lt;span&gt;&lt;strong&gt;正式地址&lt;/strong&gt;：http://192.168&lt;/span&gt;\" + \"&lt;/div&gt;\") .title(\"技能竞赛 RESTful API\") .termsOfServiceUrl(\"\") .contact(new Contact(\"lix、wangf\", \"\", \"lix@longrise.com.cn、wangf@longrise.com.cn\")) .version(\"1.0\") .build(); &#125; private ExternalDocs externalDocs() &#123; return new ExternalDocs(\"Find out more about LEAP\", \"http://www.longrise.com.cn\"); &#125;&#125; META-INF配置 在SERVICE.CONF中添加JNJSApi com.longrise.JNJS.BLL.JNJSPADService {rest} 在SWAGGER.CONF中添加RestApiConfig的限定名 com.longrise.JNJS.Conf.RestApiConfig 测试 打开 http://localhost:8012/JNJS/LEAP/Swagger/index.html?type=jnjs,type为你要访问的包名称,因为可以很多包都放在一个项目中,所以根据包名来区分. 如果你上面配置的都没有问题那么直接点 1 的位置 参数就自动设置到值,然后点测试将会有返回结果","tags":[{"name":"Swagger","slug":"Swagger","permalink":"https://jtsy.github.io/blog/tags/Swagger/"},{"name":"Restful Api","slug":"Restful-Api","permalink":"https://jtsy.github.io/blog/tags/Restful-Api/"}],"categories":[{"name":"开源","slug":"开源","permalink":"https://jtsy.github.io/blog/categories/开源/"},{"name":"接口","slug":"开源/接口","permalink":"https://jtsy.github.io/blog/categories/开源/接口/"}]}]}